using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace ReChord
{
  public class ChordReplacer
  {
    line : string;
    public this(line : string)
    {
      this.line = line;
    }
    
    public Replace(chordTranslator : Func.[string,string]) : string
    {
      mutable lostSpaces = 0;
      def ReplaceMatch(m : Match)
      {
        #warning watch for lostSpaces
        def newChord = chordTranslator(m.Value.Trim());
        when(m.Length < newChord.Length)
          lostSpaces += newChord.Length - m.Length + 1;
        newChord + string(' ', Math.Max(0, m.Length - newChord.Length));
      }
      chordRegex.Replace(line, ReplaceMatch)
    }

    chordRegex = Regex(@"[A-G][b#]?[Mm]?(sus)?\d*\s*");
  }
}
